{"id":"../../node_modules/core-js/modules/_bind.js","dependencies":[{"name":"E:\\1-Programing\\.Udemy\\3-Node.js, Express, MongoDB\\.Challnges and Projects\\2-natours\\starter\\package.json","includedInParent":true,"mtime":1682623742374},{"name":"E:\\1-Programing\\.Udemy\\3-Node.js, Express, MongoDB\\.Challnges and Projects\\2-natours\\starter\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1681912814695},{"name":"./_a-function","loc":{"line":2,"column":24,"index":38},"parent":"E:\\1-Programing\\.Udemy\\3-Node.js, Express, MongoDB\\.Challnges and Projects\\2-natours\\starter\\node_modules\\core-js\\modules\\_bind.js","resolved":"E:\\1-Programing\\.Udemy\\3-Node.js, Express, MongoDB\\.Challnges and Projects\\2-natours\\starter\\node_modules\\core-js\\modules\\_a-function.js"},{"name":"./_is-object","loc":{"line":3,"column":23,"index":79},"parent":"E:\\1-Programing\\.Udemy\\3-Node.js, Express, MongoDB\\.Challnges and Projects\\2-natours\\starter\\node_modules\\core-js\\modules\\_bind.js","resolved":"E:\\1-Programing\\.Udemy\\3-Node.js, Express, MongoDB\\.Challnges and Projects\\2-natours\\starter\\node_modules\\core-js\\modules\\_is-object.js"},{"name":"./_invoke","loc":{"line":4,"column":21,"index":117},"parent":"E:\\1-Programing\\.Udemy\\3-Node.js, Express, MongoDB\\.Challnges and Projects\\2-natours\\starter\\node_modules\\core-js\\modules\\_bind.js","resolved":"E:\\1-Programing\\.Udemy\\3-Node.js, Express, MongoDB\\.Challnges and Projects\\2-natours\\starter\\node_modules\\core-js\\modules\\_invoke.js"}],"generated":{"js":"'use strict';\nvar aFunction = require('./_a-function');\nvar isObject = require('./_is-object');\nvar invoke = require('./_invoke');\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/core-js/modules/_bind.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}}],"sources":{"../../node_modules/core-js/modules/_bind.js":"'use strict';\nvar aFunction = require('./_a-function');\nvar isObject = require('./_is-object');\nvar invoke = require('./_invoke');\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n"},"lineCount":26}},"error":null,"hash":"2139068793f4fd1d96a741cd31b44fc5","cacheData":{"env":{}}}