{"id":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","dependencies":[{"name":"E:\\1-Programing\\.Udemy\\3-Node.js, Express, MongoDB\\.Challnges and Projects\\2-natours\\starter\\package.json","includedInParent":true,"mtime":1681953597401},{"name":"E:\\1-Programing\\.Udemy\\3-Node.js, Express, MongoDB\\.Challnges and Projects\\2-natours\\starter\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1681912814695},{"name":"./_classof","loc":{"line":3,"column":22,"index":37},"parent":"E:\\1-Programing\\.Udemy\\3-Node.js, Express, MongoDB\\.Challnges and Projects\\2-natours\\starter\\node_modules\\core-js\\modules\\_regexp-exec-abstract.js","resolved":"E:\\1-Programing\\.Udemy\\3-Node.js, Express, MongoDB\\.Challnges and Projects\\2-natours\\starter\\node_modules\\core-js\\modules\\_classof.js"}],"generated":{"js":"'use strict';\n\nvar classof = require('./_classof');\nvar builtinExec = RegExp.prototype.exec;\n\n // `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw new TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n  if (classof(R) !== 'RegExp') {\n    throw new TypeError('RegExp#exec called on incompatible receiver');\n  }\n  return builtinExec.call(R, S);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}}],"sources":{"../../node_modules/core-js/modules/_regexp-exec-abstract.js":"'use strict';\n\nvar classof = require('./_classof');\nvar builtinExec = RegExp.prototype.exec;\n\n // `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw new TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n  if (classof(R) !== 'RegExp') {\n    throw new TypeError('RegExp#exec called on incompatible receiver');\n  }\n  return builtinExec.call(R, S);\n};\n"},"lineCount":22}},"error":null,"hash":"fba99629417070e143388e975ccd6dca","cacheData":{"env":{}}}